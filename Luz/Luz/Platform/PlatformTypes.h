#pragma once
#ifndef PLATFORMTYPES_H
#define PLATFORMTYPES_H

namespace Platform
{
    struct LUZ_API ScreenPoint
    {
        int16_t x;
        int16_t y;

        ScreenPoint();
        
        ScreenPoint(int16_t _x, int16_t _y);

        explicit ScreenPoint(_In_reads_(2) const int16_t *pArray);

        ScreenPoint& operator= (const ScreenPoint& Int2);
    };

    enum LUZ_API GamepadButton : int
    {
        GAMEPADBUTTON_UP = 0x0001,
        GAMEPADBUTTON_DOWN = 0x0002,
        GAMEPADBUTTON_LEFT = 0x0004,
        GAMEPADBUTTON_RIGHT = 0x0008,
        GAMEPADBUTTON_START = 0x0010,
        GAMEPADBUTTON_BACK = 0x0020,
        GAMEPADBUTTON_LEFT_THUMB = 0x0040,
        GAMEPADBUTTON_RIGHT_THUMB = 0x0080,
        GAMEPADBUTTON_LEFT_SHOULDER = 0x0100,
        GAMEPADBUTTON_RIGHT_SHOULDER = 0x0200,
        GAMEPADBUTTON_A = 0x1000,
        GAMEPADBUTTON_B = 0x2000,
        GAMEPADBUTTON_X = 0x4000,
        GAMEPADBUTTON_Y = 0x8000,
    };

    inline GamepadButton operator|(GamepadButton a, GamepadButton b)
    {
        return static_cast<GamepadButton>(static_cast<int>(a) | static_cast<int>(b));
    }

    enum LUZ_API GamepadAxis
    {
        GAMEPADAXIS_LEFT_THUMB_X = 0x01,
        GAMEPADAXIS_LEFT_THUMB_Y = 0x02,
        GAMEPADAXIS_RIGHT_THUMB_X = 0x04,
        GAMEPADAXIS_RIGHT_THUMB_Y = 0x08,
        GAMEPADAXIS_LEFT_TRIGGER = 0x10,
        GAMEPADAXIS_RIGHT_TRIGGER = 0x20,
    };

	enum LUZ_API MouseButton
	{
		MOUSEBUTTON_LEFT = 0x01,
		MOUSEBUTTON_RIGHT = 0x02,
		MOUSEBUTTON_MIDDLE = 0x04,

		MOUSEBUTTON_X = 0x10,
		MOUSEBUTTON_X1 = 0x20,
		MOUSEBUTTON_X2 = 0x40,
	};


	// Key codes are based on msdn virtual-key codes
	// https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396

	// TODO: clean keycodes that aren't used
	enum LUZ_API KeyType
	{
		KEYTYPE_UNKNOWN,
		KEYTYPE_LBUTTON,
		KEYTYPE_RBUTTON,
		KEYTYPE_CANCEL,
		KEYTYPE_MBUTTON,
		KEYTYPE_XBUTTON1,
		KEYTYPE_XBUTTON2,
		KEYTYPE_BACK,
		KEYTYPE_TAB,
		KEYTYPE_CLEAR,
		KEYTYPE_RETURN,
		KEYTYPE_SHIFT,
		KEYTYPE_CONTROL,
		KEYTYPE_MENU,
		KEYTYPE_PAUSE,
		KEYTYPE_CAPITAL,
		KEYTYPE_KANA,
		KEYTYPE_HANGUEL,
		KEYTYPE_HANGUL,
		KEYTYPE_JUNJA,
		KEYTYPE_FINAL,
		KEYTYPE_HANJA,
		KEYTYPE_KANJI,
		KEYTYPE_ESCAPE,
		KEYTYPE_CONVERT,
		KEYTYPE_NONCONVERT,
		KEYTYPE_ACCEPT,
		KEYTYPE_MODECHANGE,
		KEYTYPE_SPACE,
		KEYTYPE_PRIOR,
		KEYTYPE_NEXT,
		KEYTYPE_END,
		KEYTYPE_HOME,
		KEYTYPE_LEFT,
		KEYTYPE_UP,
		KEYTYPE_RIGHT,
		KEYTYPE_DOWN,
		KEYTYPE_SELECT,
		KEYTYPE_PRINT,
		KEYTYPE_EXECUTE,
		KEYTYPE_SNAPSHOT,
		KEYTYPE_INSERT,
		KEYTYPE_DELETE,
		KEYTYPE_HELP,
		KEYTYPE_0,
		KEYTYPE_1,
		KEYTYPE_2,
		KEYTYPE_3,
		KEYTYPE_4,
		KEYTYPE_5,
		KEYTYPE_6,
		KEYTYPE_7,
		KEYTYPE_8,
		KEYTYPE_9,
		KEYTYPE_A,
		KEYTYPE_B,
		KEYTYPE_C,
		KEYTYPE_D,
		KEYTYPE_E,
		KEYTYPE_F,
		KEYTYPE_G,
		KEYTYPE_H,
		KEYTYPE_I,
		KEYTYPE_J,
		KEYTYPE_K,
		KEYTYPE_L,
		KEYTYPE_M,
		KEYTYPE_N,
		KEYTYPE_O,
		KEYTYPE_P,
		KEYTYPE_Q,
		KEYTYPE_R,
		KEYTYPE_S,
		KEYTYPE_T,
		KEYTYPE_U,
		KEYTYPE_V,
		KEYTYPE_W,
		KEYTYPE_X,
		KEYTYPE_Y,
		KEYTYPE_Z,
		KEYTYPE_LWIN, // Or options key
		KEYTYPE_RWIN,
		KEYTYPE_APPS,
		KEYTYPE_SLEEP,
		KEYTYPE_NUMPAD0,
		KEYTYPE_NUMPAD1,
		KEYTYPE_NUMPAD2,
		KEYTYPE_NUMPAD3,
		KEYTYPE_NUMPAD4,
		KEYTYPE_NUMPAD5,
		KEYTYPE_NUMPAD6,
		KEYTYPE_NUMPAD7,
		KEYTYPE_NUMPAD8,
		KEYTYPE_NUMPAD9,
		KEYTYPE_MULTIPLY,
		KEYTYPE_ADD,
		KEYTYPE_SEPARATOR,
		KEYTYPE_SUBTRACT,
		KEYTYPE_DECIMAL,
		KEYTYPE_DIVIDE,
		KEYTYPE_F1,
		KEYTYPE_F2,
		KEYTYPE_F3,
		KEYTYPE_F4,
		KEYTYPE_F5,
		KEYTYPE_F6,
		KEYTYPE_F7,
		KEYTYPE_F8,
		KEYTYPE_F9,
		KEYTYPE_F10,
		KEYTYPE_F11,
		KEYTYPE_F12,
		KEYTYPE_F13,
		KEYTYPE_F14,
		KEYTYPE_F15,
		KEYTYPE_F16,
		KEYTYPE_F17,
		KEYTYPE_F18,
		KEYTYPE_F19,
		KEYTYPE_F20,
		KEYTYPE_F21,
		KEYTYPE_F22,
		KEYTYPE_F23,
		KEYTYPE_F24,
		KEYTYPE_NUMLOCK,
		KEYTYPE_SCROLL,
		KEYTYPE_LSHIFT,
		KEYTYPE_RSHIFT,
		KEYTYPE_LCONTROL,
		KEYTYPE_RCONTROL,
		KEYTYPE_LMENU,
		KEYTYPE_RMENU,
		KEYTYPE_BROWSER_BACK,
		KEYTYPE_BROWSER_FORWARD,
		KEYTYPE_BROWSER_REFRESH,
		KEYTYPE_BROWSER_STOP,
		KEYTYPE_BROWSER_SEARCH,
		KEYTYPE_BROWSER_FAVORITES,
		KEYTYPE_BROWSER_HOME,
		KEYTYPE_VOLUME_MUTE,
		KEYTYPE_VOLUME_DOWN,
		KEYTYPE_VOLUME_UP,
		KEYTYPE_MEDIA_NEXT_TRACK,
		KEYTYPE_MEDIA_PREV_TRACK,
		KEYTYPE_MEDIA_STOP,
		KEYTYPE_MEDIA_PLAY_PAUSE,
		KEYTYPE_LAUNCH_MAIL,
		KEYTYPE_LAUNCH_MEDIA_SELECT,
		KEYTYPE_LAUNCH_APP1,
		KEYTYPE_LAUNCH_APP2,
		KEYTYPE_OEM_1,
		KEYTYPE_OEM_PLUS,
		KEYTYPE_OEM_COMMA,
		KEYTYPE_OEM_MINUS,
		KEYTYPE_OEM_PERIOD,
		KEYTYPE_OEM_2,
		KEYTYPE_OEM_3,
		KEYTYPE_OEM_4,
		KEYTYPE_OEM_5,
		KEYTYPE_OEM_6,
		KEYTYPE_OEM_7,
		KEYTYPE_OEM_8,
		KEYTYPE_OEM_102,
		KEYTYPE_PROCESSKEY,
		KEYTYPE_PACKET,
		KEYTYPE_ATTN,
		KEYTYPE_CRSEL,
		KEYTYPE_EXSEL,
		KEYTYPE_EREOF,
		KEYTYPE_PLAY,
		KEYTYPE_ZOOM,
		KEYTYPE_NONAME,
		KEYTYPE_PA1,
		KEYTYPE_OEM_CLEAR,
		KEYTYPE_COUNT
	};
}

#endif